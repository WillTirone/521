---
title: "Project 1 Redwood Data Report"
author: William Tirone (2774025) and Natalie Smith (2819547)
format: pdf
editor: visual
---

```{r,echo=FALSE,message = FALSE, warning = FALSE}
library(tidyverse)
library(GGally)
library(lubridate)
library(anytime)
```

# TODO

-   revise each other's sections of part 1
-   check on depth scale
-   double check we removed all null
-   FIGURE OUT HOW TO ADD LINKS / SUBSCRIPTS TO OVERLEAF

# 2 Data Cleaning

```{r}

# loading in data
data_net = data.frame(read.csv('data/sonoma-data-net.csv'))
data_log = data.frame(read.csv('data/sonoma-data-log.csv'))

# initial look at the histograms before cleaning below

#data_net file 

hist(data_net$voltage/100,breaks=100) # above outlier here? 
hist(data_net$depth/100,breaks=100) # outlier here 
hist(data_net$humidity,breaks=100) # bottom outlier here , some > 100%
hist(data_net$humid_temp,breaks=100) # above outlier here, temperature
hist(data_net$humid_adj,breaks=100) # max and min outlier 
hist(data_net$hamatop,breaks=100) #unsure on outliers
hist(data_net$hamabot,breaks=100) # also unsure on outliers

#data_log 
hist(data_log$voltage,breaks=100) # min outlier here, change scale
hist(data_log$depth/100,breaks=100)
hist(data_log$humidity,breaks=100)
hist(data_log$humid_temp,breaks=100)
hist(data_log$humid_adj,breaks=100)
hist(data_log$hamatop,breaks=100) 
hist(data_log$hamabot,breaks=100)

# hists to put in paper 
ggplot(data_net,aes(x=voltage)) + geom_histogram(binwidth=10, fill="#859168", color="#859168", alpha=0.9) + labs(title="Incorrect Range Voltage From data_net")

ggplot(data_log,aes(x=voltage)) + geom_histogram(binwidth=.1, fill="#859168", color="#859168", alpha=0.9) + labs(title="Correct Range Voltage From data_log")

```

```{r}
# PART A - converting data to range

#reading in data 
data_net = read.csv('data/sonoma-data-net.csv')
data_log = read.csv('data/sonoma-data-log.csv')

#scaling voltage and depth to match first data set 
data_net = data_net |> mutate(voltage = voltage/100, depth = depth/100)
data_log = data_log |> mutate(depth = depth/100)
data_all = rbind(data_net,data_log)

#changing Incident PAR units per article
data_all = data_all |> mutate(hamatop = hamatop/54, hamabot = hamabot/54) 

# PART B - removing missing or bad data 

# fixing result_time 
datetimes = seq(as.POSIXct('2004-04-27 17:10:00'), by = "5 min", length.out = 13000, tz='PDT')
epoch = seq(1,13000,1)
sonoma_dates = data.frame(datetimes,epoch)

# joining epoch and dropping bad result_time data
data_all = dplyr::left_join(data_all[,-1],sonoma_dates,by='epoch')

# removing null values and filtering bad dates 
bad_data = data_all |> filter(is.na(humidity))
data_all = data_all |> filter(!is.na(humidity)) 

```

### (c)

```{r}
location_data = read.table('data/mote-location-data.txt',header=TRUE)
data_all = dplyr::left_join(data_all,location_data,by=c('nodeid' = 'ID'))
cat("Number of total variables in new df : ",dim(data_all)[2])
```

### d) Outlier Rejection

```{r}
# if run in order, this will plot temperature before we removed outliers
ggplot(data_all,aes(x=humid_temp)) + geom_histogram(binwidth=1, fill="#5a2e26", color="#5a2e26", alpha=0.9) + labs(title="Temperature Before Removing Outliers")

#hamatop bad filtering 
bad_hamatop_hours = data_all |> filter(hamatop==0) 
hours = data.frame(hour(bad_hamatop_hours$datetimes))
ggplot(hours,aes(x=hour.bad_hamatop_hours.datetimes.)) + geom_histogram(binwidth=1,color='#327da8',fill='#327da8',alpha=0.9) + labs(title="Hour of Day With 0 Incident PAR") + xlab('Hour of Day')
```

244570

```{r}
# outlier removal and miscellaneous outlier removal

data_all = data_all |> 
  filter(voltage >= 2.4 & voltage <= 5.5) |> 
  filter(humidity >= 0 & humidity <= 100) |> 
  filter(humid_temp <= 35) |> 
  filter(parent != 65535) |>
  filter(!(hamatop == 0 & hour(datetimes)>7 & hour(datetimes)<19))
```

*(e) (Bonus) Discuss other possible outliers and explain your reason why it is better to remove them than to keep them.*

# 3 Data Exploration

#### *(a) Make some pairwise scatterplots of some variables. Pick a reasonable time period. Explain your choice and describe your findings.*

```{r}
# create discrete bins to plot with later
data_all$height_bins = cut_interval(data_all$Height,6)

# generating facet plots 
plot = ggplot(data_all, aes(x=hamatop,y=hamabot)) + geom_point(size = .1,alpha=.2) 
plot + facet_wrap(~height_bins,nrow=2)

# try using depth as a discrete bin 
data_all$depth_bins = cut_interval(data_all$depth,10)

# plot for depth
dplot = ggplot(data_all, aes(x=hamatop,y=humid_temp)) + geom_point(size = .1,alpha=.2) 
dplot + facet_wrap(~depth_bins,nrow=2)
```

```{r}

# columns of interest 
ggpairs(data_all, 5:11, progress = FALSE)
```

#### *(b) Are any of the predictors associated with Incident PAR? If so, explain the relationship.*

```{r,warning=FALSE}
# drop first 4 id columns 
ggcorr(data_all[,c(-1,-2,-3,-4)],label=TRUE)
```

### *(c)*

```{r}
data_all_cleaned <- data_all %>% 
  filter(month(datetimes) < 7) %>% 
  filter(humid_temp <= 100)



ggplot(data = data_all_cleaned, aes(x = datetimes, y = humid_temp)) +
  geom_point(color = "#00AFBB", size = .5)



ggplot(data = data_all_cleaned, aes(x = datetimes, y = humid_adj)) +
  geom_point(color = "#00AFBB", size = .5)



ggplot(data = data_all_cleaned, aes(x = datetimes, y = hamatop)) +
  geom_point(color = "#00AFBB", size = .5)



ggplot(data = data_all_cleaned, aes(x = datetimes, y = hamabot))+
  geom_point(color = "#00AFBB", size = .5)


#lets look at dates for the last two: we're choosing may 20th because 

maytwenty = data_all_cleaned %>% filter(day(datetimes) == 20 & month(datetimes) == 05) 

ggplot(data = maytwenty, aes(x = datetimes, y = hamatop)) +
  geom_point(color = "#00AFBB", size = .5)

ggplot(data = maytwenty, aes(x = datetimes, y = hamabot)) +
  geom_point(color = "#00AFBB", size = .5)
```

### d)

```{r}
pca_prcomp <- prcomp(data_all_cleaned %>% select(-Tree, -Direc, -datetimes) %>% na.omit(), scale. = TRUE, center = TRUE)


summary(pca_prcomp)

eigenvalues <- pca_prcomp$sdev**2

plot(1:length(eigenvalues), eigenvalues/sum(eigenvalues), type = "l", main = "Screeplot", xlab = "Number of PCs")

points(1:length(eigenvalues), eigenvalues/sum(eigenvalues))


length(which(eigenvalues >= mean(eigenvalues)))


```

# 4 Interesting Findings

*Describe two/three interesting findings from exploratory analysis of the data. Try to use the techniques that you have learned, such as histograms, PCA, K-means, GMM and hierachical clustering etc. Note that even though you got a dataframe with only a few columns, you may reshape the dataframe before doing any EDA, such as reorganizing such that aggregated information in each day is a column, or a particular hour in each day is a column. Comment on your interesting findings. Different bonuses are given based on how interesing your result is.*

*(a) Finding 1.*

*(b) Finding 2.*

*(c) (Bonus) Finding 3. Bonus is given only if we find all three findings interesting.*

# 5 Graph Critique

The overall quality of the paper by Tolle et al. is good. However, some plots are not perfect from a statistician's point of view.

(a) Figure 3\[a\] shows the distributions of sensor readings projected onto the value dimension, using a histogram. It turns out that both the incident and reflected PAR have long tail. We could not read full information from this histogram. Try to make a better plot with log transform of the data.

```{r}
hist(data_all_cleaned$humid_temp)

hist(data_all_cleaned$humid_adj)

#hist(log(data_all_cleaned$hamatop))

#hist(log(data_all_cleaned$hamabot))



ggplot(data_all_cleaned,aes(x=log(hamatop))) + 

  geom_histogram(fill="#859168", color="#859168", alpha=0.9) + 

  labs(title="Log-transformation of Incident PAR")



ggplot(data_all_cleaned,aes(x=log(hamabot))) + 

  geom_histogram(fill="#859168", color="#859168", alpha=0.9) + 

  labs(title="Log-transformation of Reflected PAR")



#another chunk

#bad

data_all_cleaned %>% 

  ggplot(aes(x = humid_temp, y = factor(Height))) +

  geom_boxplot() + 

  labs(title = "Temperature",

       x = "temperature",

       y = "Node Height")



#our fix (Def not better)

forplotting = data_all_cleaned %>%

  group_by(Height) %>%

  summarize(tempmed = median(humid_temp),

            hummed = median(humid_adj),

            hamatopmed = median(hamatop),

            hapabotmed = median(hamabot))



forplotting %>% 

  ggplot(aes(x = tempmed, y = factor(Height))) +

  geom_point() + 

  labs(title = "Temperature",

       x = "temperature",

       y = "Node Height")



forplotting %>% 

  ggplot(aes(x = hummed, y = factor(Height))) +

  geom_point() 



#median mainly  0

forplotting %>% 

  ggplot(aes(x = hamatopmed, y = factor(Height))) +

  geom_point() 



#median always 0

forplotting %>% 

  ggplot(aes(x = hapabotmed, y = factor(Height))) +

  geom_point() 



#for hamatop, hamabot >  0

secondplotting = data_all_cleaned %>%

  filter(hamatop > 0) %>%

  group_by(Height) %>%

  summarize(hamatopmed = median(hamatop))



botsecondplotting = data_all_cleaned %>%

  filter(hamabot > 0) %>%

  group_by(Height) %>%

  summarize(hamabotmed = median(hamabot))



secondplotting %>%

  ggplot(aes(x = hamatopmed, y = factor(Height))) +

  geom_point() 



botsecondplotting %>% 

  ggplot(aes(x = hamabotmed, y = factor(Height))) +

  geom_point() 
```

(a) Any suggestions for improving the first two plots in Figure 4? Can you distinguish all the colors in these two plots?

    ```{r}
    #attempt 1

    data_all_cleaned %>% 

      filter(month(datetimes) == 5 & day(datetimes) == 1) %>%

      ggplot(aes(x = datetimes, y = humid_temp, col = factor(Height))) +

      geom_line(col = "darkgrey")

    #highlight highest node, highlight lowest node



    #attempt 2

    unique(factor(data_all_cleaned$Height)) #59 levels

    min(na.omit(data_all_cleaned$Height)) #10.5

    max(na.omit(data_all_cleaned$Height)) #66.5



    #TODO: plot again



    #relative humidity replica

    data_all_cleaned %>% 

      filter(month(datetimes) == 5 & day(datetimes) == 1) %>%

      ggplot(aes(x = datetimes, y = humid_adj, col = factor(Height))) +

      geom_line(col = 5)

    #highlight highest node, highlight lowest node



    #attempt 2 - only 1 height

    data_all_cleaned %>% 

      filter(month(datetimes) == 5 & day(datetimes) == 1) %>%

      filter(Height == 47) %>% #around median height

      ggplot(aes(x = datetimes, y = humid_adj)) +

      geom_line()
    ```

(b) Comment on Figure 7. Is it possible to generate a better visualization to highlight the difference between network and log data?
