---
title: "Project 1 Redwood Data Report"
author: William Tirone (2774025) and Natalie Smith (2819547)
format: pdf
editor: visual
---

```{r,echo=FALSE,message = FALSE, warning = FALSE}
library(tidyverse)
library(GGally)
library(lubridate)
library(anytime)
library(factoextra)
library(cluster)
library(patchwork)
```

# 2 Data Cleaning

```{r}

# loading in data
data_net = data.frame(read.csv('data/sonoma-data-net.csv'))
data_log = data.frame(read.csv('data/sonoma-data-log.csv'))

# initial look at the histograms before cleaning below

#data_net file 

hist(data_net$voltage/100,breaks=100) # above outlier here? 
hist(data_net$depth/100,breaks=100) # outlier here 
hist(data_net$humidity,breaks=100) # bottom outlier here , some > 100%
hist(data_net$humid_temp,breaks=100) # above outlier here, temperature
hist(data_net$humid_adj,breaks=100) # max and min outlier 
hist(data_net$hamatop,breaks=100) #unsure on outliers
hist(data_net$hamabot,breaks=100) # also unsure on outliers

#data_log 
hist(data_log$voltage,breaks=100) # min outlier here, change scale
hist(data_log$depth/100,breaks=100)
hist(data_log$humidity,breaks=100)
hist(data_log$humid_temp,breaks=100)
hist(data_log$humid_adj,breaks=100)
hist(data_log$hamatop,breaks=100) 
hist(data_log$hamabot,breaks=100)

# hists to put in paper 

ggplot(data_net,aes(x=voltage)) + geom_histogram(binwidth=10, fill="#859168", color="#859168", alpha=0.9) + labs(title="Incorrect Range Voltage From data_net")

ggplot(data_log,aes(x=voltage)) + geom_histogram(binwidth=.1, fill="#859168", color="#859168", alpha=0.9) + labs(title="Correct Range Voltage From data_log")

```

```{r}
# PART A - converting data to range

#reading in data 
data_net = read.csv('data/sonoma-data-net.csv')
data_log = read.csv('data/sonoma-data-log.csv')

#scaling voltage and depth to match first data set 
data_net = data_net |> mutate(voltage = voltage/100, depth = depth/100)
data_log = data_log |> mutate(depth = depth/100)
data_all = rbind(data_net,data_log)

#changing Incident PAR units per article
data_all = data_all |> mutate(hamatop = hamatop/54, hamabot = hamabot/54) 

# PART B - removing missing or bad data 

# fixing result_time 
datetimes = seq(as.POSIXct('2004-04-27 17:10:00'), by = "5 min", length.out = 13000, tz='PDT')
epoch = seq(1,13000,1)
sonoma_dates = data.frame(datetimes,epoch)

# joining epoch and dropping bad result_time data
data_all = dplyr::left_join(data_all[,-1],sonoma_dates,by='epoch')

# removing null values and filtering bad dates 
bad_data = data_all |> filter(is.na(humidity))
data_all = data_all |> filter(!is.na(humidity)) 

location_data = read.table('data/mote-location-data.txt',header=TRUE)
data_all = dplyr::left_join(data_all,location_data,by=c('nodeid' = 'ID'))
cat("Number of total variables in new df : ",dim(data_all)[2])
stored = data_all

# adding day and night categorical variable 
data_all$day_or_night = ifelse((hour(data_all$datetimes)>7 & hour(data_all$datetimes)<19),"Day","Night")

```

### d) Outlier Rejection

```{r}

# histograms to determine direction to remove outliers 

# if run in order, this will plot temperature before we removed outliers
ggplot(data_all,aes(x=humid_temp)) + geom_histogram(binwidth=1, fill="#5a2e26", color="#5a2e26", alpha=0.9) + labs(title="Temperature Before Removing Outliers")

#hamatop bad filtering 
bad_hamatop_hours = data_all |> filter(hamatop==0) 
hours = data.frame(hour(bad_hamatop_hours$datetimes))
ggplot(hours,aes(x=hour.bad_hamatop_hours.datetimes.)) + geom_histogram(binwidth=1,color='#327da8',fill='#327da8',alpha=0.9) + labs(title="Hour of Day With 0 Incident PAR") + xlab('Hour of Day')
```

```{r}
# outlier removal and miscellaneous outlier removal

data_all = data_all |> 
  filter(voltage >= 2.4 & voltage <= 5.5) |> 
  filter(humidity >= 0 & humidity <= 100) |> 
  filter(humid_temp <= 35) |> 
  filter(parent != 65535) |>
  filter(!(hamatop == 0 & hour(datetimes)>7 & hour(datetimes)<19)) 

```

# 3 Data Exploration

#### *(a) Make some pairwise scatterplots of some variables. Pick a reasonable time period. Explain your choice and describe your findings.*

```{r}
# create discrete bins to plot with later
data_all$height_bins = cut_interval(data_all$Height,3)

# generating facet plots 
plot = ggplot(data_all, aes(x=hamatop,y=hamabot)) + geom_point(size = .1,alpha=.2) 
plot + facet_wrap(~height_bins,nrow=2)

# try using depth as a discrete bin 
data_all$depth_bins = cut_interval(data_all$depth,10)

# plot for depth
dplot = ggplot(data_all, aes(x=hamatop,y=humid_temp)) + geom_point(size = .1,alpha=.2) 
dplot + facet_wrap(~depth_bins,nrow=2)
```

```{r}

# try to color by day and night hours 
ggplot(data = data_all, aes(x = humid_temp, y = humid_adj)) +
  geom_point(aes(color=day_or_night), alpha=.5,size=1)

ggplot(data = data_all, aes(x = voltage, y = hamatop)) +
  geom_point(aes(color=day_or_night))
```

#### *(b) Are any of the predictors associated with Incident PAR? If so, explain the relationship.*

```{r,warning=FALSE}
# drop first 4 id columns 
ggcorr(data_all[,c(-1,-2,-3,-4)],label=TRUE)
```

### *(c)*

```{r}

# arbitrarily choose a single day to look at 

ggplot(data = data_all, aes(x = datetimes, y = humid_temp)) +
  geom_point(aes(color=height_bins), size = .5) + 
  labs(title = "Temperature Over Time", x = "Days")

ggplot(data = data_all, aes(x = datetimes, y = humid_adj)) +
  geom_point(aes(color=height_bins), size = .5) + 
  labs(title = "Relative Humidity Over Time", x = "Days")

ggplot(data = data_all, aes(x = datetimes, y = hamatop)) +
  geom_point(aes(color=height_bins), size = .5) + 
  labs(title = "Incident PAR Over Time", x = "Days")

ggplot(data = data_all, aes(x = datetimes, y = hamabot))+
  geom_point(aes(color=height_bins), size = .5) + 
  labs(title = "Reflected PAR Over Time", x = "Days")


maytwenty = data_all %>% filter(day(datetimes) == 20 & month(datetimes) == 5 & hour(datetimes) == 12 ) 

ggplot(data = maytwenty, aes(x = datetimes, y = humid_temp)) +
  geom_point(aes(color=height_bins), size = 1) + 
  labs(title = "Temperature Over 1 Hour On May 20th", x = "Days")

ggplot(data = maytwenty, aes(x = datetimes, y = humid_adj)) +
  geom_point(aes(color=height_bins), size = 1)+
  labs(title = "Relative Humidity Over 1 Hour On May 20th", x = "Days")

ggplot(data = maytwenty, aes(x = datetimes, y = hamatop)) +
  geom_point(aes(color=height_bins), size = 1)+
  labs(title = "Incident PAR Over 1 Hour On May 20th", x = "Days")

ggplot(data = maytwenty, aes(x = datetimes, y = hamabot)) +
  geom_point(aes(color=height_bins), size = 1)+
  labs(title = "Reflected PAR Over 1 Hour On May 20th", x = "Days")

```

### d)

```{r}
pca_prcomp <- prcomp(data_all %>% 
              select(-epoch, -Tree, -Direc, -datetimes,
                     -height_bins, -depth_bins) %>%
                na.omit(), scale. = TRUE, center = TRUE)
fviz_pca(pca_prcomp, axes = c(1, 2), label = "var")

summary(pca_prcomp)
eigenvalues <- pca_prcomp$sdev**2

plot(1:length(eigenvalues), eigenvalues/sum(eigenvalues), type = "l", main = "Screeplot", xlab = "Number of PCs", ylab = "Proportion of Variance Retained")

points(1:length(eigenvalues), eigenvalues/sum(eigenvalues))
length(which(eigenvalues >= mean(eigenvalues)))
```

# 4 Interesting Findings

```{r,Warnings=FALSE}

# pulling outmay 1st 
time.clust = data_all |> 
  filter(month(datetimes) == 5 & day(datetimes) == 1)

ggplot(data = time.clust, 
       aes(x = humid_temp, y = humid_adj)) +
       geom_point(aes(color=day_or_night),size=.7)

model = kmeans(time.clust[,c('humid_temp','humid_adj')],centers = 2,nstart=20)

fviz_cluster(model,
             data=time.clust[,c('humid_temp','humid_adj')],
             repel = FALSE,
             geom = "point",
             ellipse.type = "norm")

```

```{r}
dis = dist(time.clust[,c('humid_temp','humid_adj')])^2
sil = cluster::silhouette(model$cluster,dis)
fviz_silhouette(sil)
```

```{r}
#cleaning

may31 = data_all %>% na.omit() %>%

filter(month(datetimes) == 5 & day(datetimes) == 31) %>%

filter(Height == max(Height) | Height == min(Height))

june1 = data_all %>% na.omit() %>%

filter(month(datetimes) == 6 & day(datetimes) == 1) %>%

filter(Height == max(Height) | Height == min(Height))

june2 = data_all %>% na.omit() %>%

filter(month(datetimes) == 6 & day(datetimes) == 2) %>%

filter(Height == max(Height) | Height == min(Height))

june3 = data_all %>% na.omit() %>%

filter(month(datetimes) == 6 & day(datetimes) == 3) %>%

filter(Height == max(Height) | Height == min(Height))

#subsetting

may31 = may31 %>%

group_by(datetimes) %>%

mutate(difference_temp =

humid_temp[Height == max(may31$Height)] -

humid_temp[Height == min(may31$Height)]) %>%

mutate(difference_hum =

humid_adj[Height == max(may31$Height)] -

humid_adj[Height == min(may31$Height)]) %>%

mutate(difference_hamatop =

hamatop[Height == max(may31$Height)] -

hamatop[Height == min(may31$Height)]) %>%

mutate(difference_hamabot =

hamabot[Height == max(may31$Height)] -

hamabot[Height == min(may31$Height)])

june1 = june1 %>%

group_by(datetimes) %>%

mutate(difference_temp =

humid_temp[Height == max(june1$Height)] -

humid_temp[Height == min(june1$Height)]) %>%

mutate(difference_hum =

humid_adj[Height == max(june1$Height)] -

humid_adj[Height == min(june1$Height)]) %>%

mutate(difference_hamatop =

hamatop[Height == max(june1$Height)] -

hamatop[Height == min(june1$Height)]) %>%

mutate(difference_hamabot =

hamabot[Height == max(june1$Height)] -

hamabot[Height == min(june1$Height)])

june2 = june2 %>%

group_by(datetimes) %>%

mutate(difference_temp =

humid_temp[Height == max(june2$Height)] -

humid_temp[Height == min(june2$Height)]) %>%

mutate(difference_hum =

humid_adj[Height == max(june2$Height)] -

humid_adj[Height == min(june2$Height)]) %>%

mutate(difference_hamatop =

hamatop[Height == max(june2$Height)] -

hamatop[Height == min(june2$Height)]) %>%

mutate(difference_hamabot =

hamabot[Height == max(june2$Height)] -

hamabot[Height == min(june2$Height)])

june3 = june3 %>%

group_by(datetimes) %>%

mutate(difference_temp =

humid_temp[Height == max(june3$Height)] -

humid_temp[Height == min(june3$Height)]) %>%

mutate(difference_hum =

humid_adj[Height == max(june3$Height)] -

humid_adj[Height == min(june3$Height)]) %>%

mutate(difference_hamatop =

hamatop[Height == max(june3$Height)] -

hamatop[Height == min(june3$Height)]) %>%

mutate(difference_hamabot =

hamabot[Height == max(june3$Height)] -

hamabot[Height == min(june3$Height)])

#plotting temperature

may31 %>%

ggplot(aes(x = datetimes, y = difference_temp)) +

geom_line(data = may31, col = "darkgreen") +

geom_line(data = june1, col = "darkgreen") +

geom_line(data = june2, col = "darkgreen") +

geom_line(data = june3, col = "darkgreen") +

geom_hline(yintercept=0, linetype = 'dashed', col = 'brown') +

labs(title = "Difference in Temperature",

subtitle = "Top of tree is generally hotter than the bottom",

y = "Difference in temperature",

x = "Date")

#plotting humidity

may31 %>%

ggplot(aes(x = datetimes, y = difference_hum)) +

geom_line(data = may31, col = "darkgreen") +

geom_line(data = june1, col = "darkgreen") +

geom_line(data = june2, col = "darkgreen") +

geom_line(data = june3, col = "darkgreen") +

geom_hline(yintercept=0, linetype = 'dashed', col = 'brown') +

labs(title = "Difference in Relative Humidity",

subtitle = "Top of tree is generally less humid than the bottom",

y = "Difference in relative humidity",

x = "Date")

#plotting Incident PAR

may31 %>%

ggplot(aes(x = datetimes, y = difference_hamatop)) +

geom_line(data = may31, col = "darkgreen") +

geom_line(data = june1, col = "darkgreen") +

geom_line(data = june2, col = "darkgreen") +

geom_line(data = june3, col = "darkgreen") +

geom_hline(yintercept=0, linetype = 'dashed', col = 'brown') +

labs(title = "Difference in Incident PAR",

subtitle = "Top of tree generally receives more direct sunlight than bottom",

y = "Difference in Incident PAR",

x = "Date")

#plotting Reflected PAR

may31 %>%

ggplot(aes(x = datetimes, y = difference_hamabot)) +

geom_line(data = may31, col = "darkgreen") +

geom_line(data = june1, col = "darkgreen") +

geom_line(data = june2, col = "darkgreen") +

geom_line(data = june3, col = "darkgreen") +

geom_hline(yintercept=0, linetype = 'dashed', col = 'brown') +

labs(title = "Difference in Reflected PAR",

subtitle = "Top of tree generally receives more reflected sunlight than bottom",

y = "Difference in Reflected PAR",

x = "Date")
```

# 5 Graph Critique

#### a)

```{r}
ggplot(data_all,aes(x=log(humid_temp))) +
  geom_histogram(fill="#859168", color="#859168", alpha=0.9) +
  labs(title="Log-Transformation of Temperature")

ggplot(data_all,aes(x=log(humid_adj))) +
  geom_histogram(fill="#859168", color="#859168", alpha=0.9) +
  labs(title="Log-transformation of Humidity")

ggplot(data_all,aes(x=log(hamatop))) +
  geom_histogram(fill="#859168", color="#859168", alpha=0.9) +
  labs(title="Log-transformation of Incident PAR")

ggplot(data_all,aes(x=log(hamabot))) +
  geom_histogram(fill="#859168", color="#859168", alpha=0.9) +
  labs(title="Log-transformation of Reflected PAR")
```

#### b)

```{#pt5}

data_all$height_bins = cut_interval(data_all$Height, 5)

#c1

p1 = data_all %>% na.omit() %>%

ggplot(aes(x = humid_temp, y = factor(height_bins))) +

geom_boxplot(col = "darkgreen", outlier.size = 0.2) +

labs(title = "Temperature",

x = "Temperature",

y = "Node Height")

#c2

p2 = data_all %>% na.omit() %>%

ggplot(aes(x = humid_adj, y = factor(height_bins))) +

geom_boxplot(col = "darkgreen", outlier.size = 0.2) +

labs(title = "Humidity",

x = "Humidity",

y = "Node Height")

#c3

p3 = data_all %>% na.omit() %>% filter(hamatop > 0) %>%

ggplot(aes(x = hamatop, y = factor(height_bins))) +

geom_boxplot(col = "darkgreen", outlier.size = 0.2) +

labs(title = "Incident PAR",

x = "Incident PAR",

y = "Node Height")

#c4

p4 = data_all %>% na.omit() %>% filter(hamabot > 0) %>%

ggplot(aes(x = hamabot, y = factor(height_bins))) +

geom_boxplot(col = "darkgreen", outlier.size = 0.2) +

labs(title = "Reflected PAR",

x = "Reflected PAR",

y = "Node Height")

library(patchwork)

p1 + p2 + p3 + p4 + plot_annotation(title = "Distribution of Sensor Readings")

#d1

d1 = data_all %>% na.omit() %>%

ggplot(aes(x = humid_temp - mean(humid_temp), y = factor(height_bins))) +

geom_boxplot(col = "darkgreen", outlier.size = 0.2) +

labs(title = "Temperature",

x = "Temperature",

y = "Node Height")

#d2

d2 = data_all %>% na.omit() %>%

ggplot(aes(x = humid_adj - mean(humid_adj), y = factor(height_bins))) +

geom_boxplot(col = "darkgreen", outlier.size = 0.2) +

labs(title = "Humidity",

x = "Humidity",

y = "Node Height")

#d3

d3 = data_all %>% na.omit() %>% filter(hamatop > 0) %>%

ggplot(aes(x = hamatop - mean(hamatop), y = factor(height_bins))) +

geom_boxplot(col = "darkgreen", outlier.size = 0.2) +

labs(title = "Incident PAR",

x = "Incident PAR",

y = "Node Height")

#d4

d4 = data_all %>% na.omit() %>% filter(hamabot > 0) %>%

ggplot(aes(x = hamabot - mean(hamabot), y = factor(height_bins))) +

geom_boxplot(col = "darkgreen", outlier.size = 0.2) +

labs(title = "Reflected PAR",

x = "Reflected PAR",

y = "Node Height")

d1+ d2 + d3 + d4 + plot_annotation(title = "Distribution of Sensor Reading Differences from Mean")
```

#### c)

```{r}
stored = data_all |> 
  filter(voltage >= 2.4 & voltage <= 5.5) |> 
  filter(humidity >= 0 & humidity <= 100) |> 
  filter(humid_temp <= 35)

mayfirst = stored %>% filter(month(datetimes) == 5 & day(datetimes) == 1)

mayfirst %>%
  ggplot(aes(x = datetimes, y = humid_temp, col = factor(Height))) +
  geom_line(col = "lightgrey") +
  geom_line(
    data = mayfirst %>% filter(Height == 66.5),
    aes(color = 'highest (66.5m)')) +
  geom_line(
    data = mayfirst %>% filter(Height == 12.7),
    aes(color = 'lowest (12.7m)')) +
  labs(title = "Temperature Readings Across Tree Node Throughout Day",
    subtitle = "Data for May 1st",
    x = "Time of Day",
    y = "Temperature") +
  scale_color_manual(name = "Node Height", 
                     breaks = c("highest (66.5m)", "lowest (12.7m)"),
                     values = c("lowest (12.7m)" = "darkgreen",
                                "highest (66.5m)" = "magenta"))
```

```{r}
mayfirst %>%
  ggplot(aes(x = datetimes, y = humid_adj, col = factor(Height))) +
  geom_line(col = "lightgrey") +
  geom_line(
    data = mayfirst %>% filter(Height == 66.5),
    aes(color = 'highest (66.5m)')) +
  geom_line(
    data = mayfirst %>% filter(Height == 12.7),
    aes(color = 'lowest (12.7m)')) +
  labs(title = "Humidity Readings Across Tree Node Throughout Day",
    subtitle = "Data for May 1st",
    x = "Time of Day",
    y = "Humidity") +
  scale_color_manual(name = "Node Height", 
                     breaks = c("highest (66.5m)", "lowest (12.7m)"),
                     values = c("lowest (12.7m)" = "darkgreen",
                                "highest (66.5m)" = "magenta"))
```

#### d)

```{r}

#reading in data 
data_net = read.csv('data/sonoma-data-net.csv')
data_log = read.csv('data/sonoma-data-log.csv')

data_net$source = 'network'
data_log$source = 'log'

yield_df = rbind(data_net,data_log)

# joining epoch and dropping bad result_time data
yield_df = dplyr::left_join(yield_df[,-1],sonoma_dates,by='epoch')
yield_df = dplyr::left_join(yield_df,location_data,by=c('nodeid' = 'ID'))

yield_df$measure = ifelse(is.na(yield_df$humidity),0,1)
yield_df$height_bins = cut_interval(yield_df$Height, 3)

no_measure = yield_df |> filter(measure==0)
dim(no_measure)
#box plot 
yield_df |>
  ggplot(aes(x = humid_adj, y = factor(height_bins))) +
  geom_boxplot(col = "darkgreen", outlier.size = 0.2) +
  labs(title = "Humidity",
    x = "Humidity",
    y = "Node Height")

#scatter 
ggplot(data=no_measure,aes(x=day(datetimes),fill=source)) + geom_bar()
```
